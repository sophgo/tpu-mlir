RUN: bmodel_dis.py %p/bmodel/yolov5s_bm1684x_int8_sym.bmodel | FileCheck %s

CHECK:  module attributes {chip = "BM1684X", version = 2.2} {
CHECK:      ^bb-1(%G8146944: memref<1x3x640x640xui8, strides: [1228800, 409600, 640, 1]>)    //  run_mode=TPU_STATIC
CHECK-NEXT:        %R0, %D1 = "dma.tensor.broadcast"(%G8146944, %B0) {decompress = False} : (memref<1x1x130x640xi8, strides: [1228800, 0, 640, 1]>, none) -> (memref<1x6x130x640xi8, strides: [83200, 0, 640, 1]>, none)
CHECK-NEXT:        %R0.L6, %D2 = "dma.tensor.broadcast"(%G8556544, %B0) {decompress = False} : (memref<1x1x130x640xi8, strides: [1228800, 0, 640, 1]>, none) -> (memref<1x6x130x640xi8, strides: [83200, 0, 640, 1]>, none)
CHECK-NEXT:        %R0.L12, %D3 = "dma.tensor.broadcast"(%G8966144, %B0) {decompress = False} : (memref<1x1x130x640xi8, strides: [1228800, 0, 640, 1]>, none) -> (memref<1x6x130x640xi8, strides: [83200, 0, 640, 1]>, none)
CHECK-NEXT:        %R5.8960, %D4 = "dma.tensor"(%G0, %B0) {decompress = False} : (memref<1x32x1x448xi8, strides: [14336, 448, 448, 1]>, none) -> (memref<1x32x1x448xi8, strides: [448, 448, 448, 1]>, none)
CHECK-NEXT:        %R15.8192, %B1 = "tsbc.s_distribute"(%S1472, %D4)  : (memref<1x6x1x1xi32>, none) -> (memref<1x6x1x1xi32, strides: [1, 1, 1, 1]>, none)
CHECK:        %R5.3840, %B48 = "quant.rq1"(%R6, %R15.10304, %R15.10308, %R15.10312, %D14) {round_mode = 5} : (memref<1x64x32x160xsi32, strides: [5120, 5120, 160, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, none) -> (memref<1x64x32x160xsi8, strides: [5120, 5120, 160, 1]>, none)
CHECK-NEXT:        %R0, %D15 = "dma.tensor.broadcast"(%G8390144, %B45) {decompress = False} : (memref<1x1x134x640xi8, strides: [1228800, 0, 640, 1]>, none) -> (memref<1x6x134x640xi8, strides: [85760, 0, 640, 1]>, none)
CHECK-NEXT:        %R0.L6, %D16 = "dma.tensor.broadcast"(%G8799744, %B45) {decompress = False} : (memref<1x1x134x640xi8, strides: [1228800, 0, 640, 1]>, none) -> (memref<1x6x134x640xi8, strides: [85760, 0, 640, 1]>, none)
CHECK-NEXT:        %R0.L12, %D17 = "dma.tensor.broadcast"(%G9209344, %B45) {decompress = False} : (memref<1x1x134x640xi8, strides: [1228800, 0, 640, 1]>, none) -> (memref<1x6x134x640xi8, strides: [85760, 0, 640, 1]>, none)
CHECK-NEXT:        %R15.10112, %B49 = "tsbc.s_distribute"(%S1472, %D17)  : (memref<1x6x1x1xi32>, none) -> (memref<1x6x1x1xi32, strides: [1, 1, 1, 1]>, none)
CHECK-NEXT:        %R15.10112, %B50 = "arith.cast"(%R15.10112, %D17) {round_mode = 0} : (memref<1x6x1x1xsi32, strides: [16, 16, 1, 1]>, none) -> (memref<1x6x1x1xsi8, strides: [64, 64, 1, 1]>, none)
CHECK:        %R4, %B95 = "quant.rq1"(%R8, %R6, %R6.4, %R6.8, %D30) {round_mode = 5} : (memref<1x32x160x160xsi32, strides: [25600, 25600, 160, 1]>, memref<1x32x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x32x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x32x1x1xsi32, strides: [16, 16, 1, 1]>, none) -> (memref<1x32x160x160xsi8, strides: [25600, 25600, 160, 1]>, none)
CHECK-NEXT:        %R7, %D31 = "dma.tensor"(%G102400, %B92) {decompress = False} : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R7, %B96 = "tsbc.l_bc"(%R7, %D31)  : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x64x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R12, %B97 = "sg.pe_s_gather_d1coor"(%R7, %R7, %D31) {limit_enable = False, fill_const = False, const_value = 0} : (memref<1x32x1x256xi8, strides: [0, 0, 319.0, 1]>, memref<1x32x1x25600xui8, strides: [25600, 25600, 25600, 1]>, none) -> (memref<1x32x1x25600xi8, strides: [25600, 25600, 25600, 1]>, none)
CHECK-NEXT:        %R5, %B98 = "arith.muls"(%R0, %C67, %C248, %D31) {round_mode = 5} : (memref<1x32x160x160xsi8, strides: [25600, 25600, 160, 1]>, ui8, ui8, none) -> (memref<1x32x160x160xsi16, strides: [25600, 25600, 160, 1]>, none)
CHECK-NEXT:        %R8.2048, %B99 = "arith.muls"(%R12, %C23, %C251, %D31) {round_mode = 5} : (memref<1x32x160x160xsi8, strides: [25600, 25600, 160, 1]>, ui8, ui8, none) -> (memref<1x32x160x160xsi16, strides: [25600, 25600, 160, 1]>, none)
CHECK:        %R5, %B141 = "conv.normal"(%R2, %R3.6464, %C0, %C0, %D47) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], res_add = False} : (memref<1x64x80x80xsi8, strides: [6400, 6400, 80, 1]>, memref<64x64x3x3xsi8>, ui8, si8, none) -> (memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, none)
CHECK-NEXT:        %R5, %B142 = "arith.adds"(%R3.6412, %R5, %D47) {round_mode = 0} : (memref<1x64x80x80xsi32, strides: [0, 1, 0, 0]>, memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, none) -> (memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, none)
CHECK-NEXT:        %R0.12800, %B143 = "quant.rq1"(%R5, %R3.6400, %R3.6404, %R3.6408, %D47) {round_mode = 5} : (memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, none) -> (memref<1x64x80x80xsi8, strides: [6400, 6400, 80, 1]>, none)
CHECK-NEXT:        %R4, %D48 = "dma.tensor"(%G339968, %B140) {decompress = False} : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R4, %B144 = "tsbc.l_bc"(%R4, %D48)  : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x64x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R5, %B145 = "sg.pe_s_gather_d1coor"(%R4, %R4, %D48) {limit_enable = False, fill_const = False, const_value = 0} : (memref<1x64x1x256xi8, strides: [0, 0, 319.0, 1]>, memref<1x64x1x6400xui8, strides: [6400, 6400, 6400, 1]>, none) -> (memref<1x64x1x6400xi8, strides: [6400, 6400, 6400, 1]>, none)
CHECK:        %R3.3200, %B188 = "sg.pe_s_gather_d1coor"(%R4, %R4, %D62) {limit_enable = False, fill_const = False, const_value = 0} : (memref<1x128x1x256xi8, strides: [0, 0, 319.0, 1]>, memref<1x128x1x1600xui8, strides: [3200, 1600, 1600, 1]>, none) -> (memref<1x128x1x1600xi8, strides: [3200, 1600, 1600, 1]>, none)
CHECK-NEXT:        %R5, %D63 = "dma.tensor"(%G966656, %B186) {decompress = False} : (memref<1x64x1x2432xi8, strides: [155648, 2432, 2432, 1]>, none) -> (memref<1x64x1x2432xi8, strides: [2432, 2432, 2432, 1]>, none)
CHECK-NEXT:        %R1.15616, %B189 = "conv.normal"(%R3.3200, %R5.128, %C0, %C0, %D63) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], res_add = False} : (memref<1x128x40x40xsi8, strides: [3200, 1600, 40, 1]>, memref<128x128x3x3xsi8>, ui8, si8, none) -> (memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, none)
CHECK-NEXT:        %R1.15616, %B190 = "arith.adds"(%R5.76, %R1.15616, %D63) {round_mode = 0} : (memref<1x128x40x40xsi32, strides: [0, 1, 0, 0]>, memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, none) -> (memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, none)
CHECK-NEXT:        %R4, %B191 = "quant.rq1"(%R1.15616, %R5, %R5.4, %R5.8, %D63) {round_mode = 5} : (memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, memref<1x128x1x1xsi32, strides: [32, 16, 1, 1]>, memref<1x128x1x1xsi32, strides: [32, 16, 1, 1]>, memref<1x128x1x1xsi32, strides: [32, 16, 1, 1]>, none) -> (memref<1x128x40x40xsi8, strides: [3200, 1600, 40, 1]>, none)
CHECK-NEXT:        %R6.12800, %D64 = "dma.tensor"(%G1122304, %B188) {decompress = False} : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK:        %R5, %D79 = "dma.tensor"(%G2895872, %B231) {decompress = False} : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R5, %B235 = "tsbc.l_bc"(%R5, %D79)  : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x64x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R4.11776, %B236 = "sg.pe_s_gather_d1coor"(%R5, %R5, %D79) {limit_enable = False, fill_const = False, const_value = 0} : (memref<1x256x1x256xi8, strides: [0, 0, 319.0, 1]>, memref<1x256x1x400xui8, strides: [1792, 448, 400, 1]>, none) -> (memref<1x256x1x400xi8, strides: [1792, 448, 400, 1]>, none)
CHECK-NEXT:        %R5.256, %B237 = "conv.normal"(%R4.11776, %R3.256, %C0, %C0, %D79) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], res_add = False} : (memref<1x256x20x20xsi8, strides: [1792, 448, 20, 1]>, memref<256x256x3x3xsi8>, ui8, si8, none) -> (memref<1x256x20x20xsi32, strides: [1600, 400, 20, 1]>, none)
CHECK-NEXT:        %R5.256, %B238 = "arith.adds"(%R3.204, %R5.256, %D79) {round_mode = 0} : (memref<1x256x20x20xsi32, strides: [0, 1, 0, 0]>, memref<1x256x20x20xsi32, strides: [1600, 400, 20, 1]>, none) -> (memref<1x256x20x20xsi32, strides: [1600, 400, 20, 1]>, none)
CHECK-NEXT:        %R4.9984, %B239 = "quant.rq1"(%R5.256, %R3, %R3.4, %R3.8, %D79) {round_mode = 5} : (memref<1x256x20x20xsi32, strides: [1600, 400, 20, 1]>, memref<1x256x1x1xsi32, strides: [64, 16, 1, 1]>, memref<1x256x1x1xsi32, strides: [64, 16, 1, 1]>, memref<1x256x1x1xsi32, strides: [64, 16, 1, 1]>, none) -> (memref<1x256x20x20xsi8, strides: [1792, 448, 20, 1]>, none)
CHECK:        %R2, %B286 = "conv.normal"(%R3, %R4.128, %C0, %C0, %D90) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], res_add = False} : (memref<1x512x40x40xsi8, strides: [12800, 1600, 40, 1]>, memref<128x512x1x1xsi8>, ui8, si8, none) -> (memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, none)
CHECK-NEXT:        %R2, %B287 = "arith.adds"(%R4.76, %R2, %D90) {round_mode = 0} : (memref<1x128x40x40xsi32, strides: [0, 1, 0, 0]>, memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, none) -> (memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, none)
CHECK-NEXT:        %R1.9216, %B288 = "quant.rq1"(%R2, %R4, %R4.4, %R4.8, %D90) {round_mode = 5} : (memref<1x128x40x40xsi32, strides: [3200, 1600, 40, 1]>, memref<1x128x1x1xsi32, strides: [32, 16, 1, 1]>, memref<1x128x1x1xsi32, strides: [32, 16, 1, 1]>, memref<1x128x1x1xsi32, strides: [32, 16, 1, 1]>, none) -> (memref<1x128x40x40xsi8, strides: [3200, 1600, 40, 1]>, none)
CHECK-NEXT:        %R5, %D91 = "dma.tensor"(%G4898816, %B285) {decompress = False} : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R5, %B289 = "tsbc.l_bc"(%R5, %D91)  : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x64x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R2, %B290 = "sg.pe_s_gather_d1coor"(%R5, %R5, %D91) {limit_enable = False, fill_const = False, const_value = 0} : (memref<1x128x1x256xi8, strides: [0, 0, 319.0, 1]>, memref<1x128x1x1600xui8, strides: [3200, 1600, 1600, 1]>, none) -> (memref<1x128x1x1600xi8, strides: [3200, 1600, 1600, 1]>, none)
CHECK:        %R5, %B333 = "tsbc.l_bc"(%R5, %D105)  : (memref<1x1x1x256xi8, strides: [256, 256, 256, 1]>, none) -> (memref<1x64x1x256xi8, strides: [256, 256, 256, 1]>, none)
CHECK-NEXT:        %R3.2048, %B334 = "sg.pe_s_gather_d1coor"(%R5, %R5, %D105) {limit_enable = False, fill_const = False, const_value = 0} : (memref<1x64x1x256xi8, strides: [0, 0, 319.0, 1]>, memref<1x64x1x6400xui8, strides: [6400, 6400, 6400, 1]>, none) -> (memref<1x64x1x6400xi8, strides: [6400, 6400, 6400, 1]>, none)
CHECK-NEXT:        %R7, %D106 = "dma.tensor"(%G5337088, %B332) {decompress = False} : (memref<1x64x1x640xi8, strides: [40960, 640, 640, 1]>, none) -> (memref<1x64x1x640xi8, strides: [640, 640, 640, 1]>, none)
CHECK-NEXT:        %R4, %B335 = "conv.normal"(%R3.2048, %R7.64, %C0, %C0, %D106) {kernel = [3, 3], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], kernel_rotate = False, pad_mode = 0, pad = [1, 1, 1, 1], res_add = False} : (memref<1x64x80x80xsi8, strides: [6400, 6400, 80, 1]>, memref<64x64x3x3xsi8>, ui8, si8, none) -> (memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, none)
CHECK-NEXT:        %R4, %B336 = "arith.adds"(%R7.12, %R4, %D106) {round_mode = 0} : (memref<1x64x80x80xsi32, strides: [0, 1, 0, 0]>, memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, none) -> (memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, none)
CHECK-NEXT:        %R6, %B337 = "quant.rq1"(%R4, %R7, %R7.4, %R7.8, %D106) {round_mode = 5} : (memref<1x64x80x80xsi32, strides: [6400, 6400, 80, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, memref<1x64x1x1xsi32, strides: [16, 16, 1, 1]>, none) -> (memref<1x64x80x80xsi8, strides: [6400, 6400, 80, 1]>, none)
CHECK:        %R4, %B379 = "sg.pe_s_gather_d1coor"(%R7, %R7, %D122) {limit_enable = False, fill_const = False, const_value = 0} : (memref<1x128x1x256xi8, strides: [0, 0, 319.0, 1]>, memref<1x128x1x1600xui8, strides: [3200, 1600, 1600, 1]>, none) -> (memref<1x128x1x1600xi8, strides: [3200, 1600, 1600, 1]>, none)
CHECK-NEXT:        %R6, %D123 = "dma.tensor"(%G5873664, %B377) {decompress = False} : (memref<1x64x1x1280xi8, strides: [81920, 1280, 1280, 1]>, none) -> (memref<1x64x1x1280xi8, strides: [1280, 1280, 1280, 1]>, none)
CHECK-NEXT:        %R2.5632, %B380 = "arith.copy"(%R3, %D123) {round_mode = 0} : (memref<1x128x40x40xsi8, strides: [3200, 1600, 40, 1]>, none) -> (memref<1x128x40x40xsi8, strides: [6400, 1600, 40, 1]>, none)
CHECK-NEXT:        %R2.8832, %B381 = "arith.copy"(%R4, %D123) {round_mode = 0} : (memref<1x128x40x40xsi8, strides: [3200, 1600, 40, 1]>, none) -> (memref<1x128x40x40xsi8, strides: [6400, 1600, 40, 1]>, none)
CHECK-NEXT:        %R3, %B382 = "conv.normal"(%R2.5632, %R6.256, %C0, %C0, %D123) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], res_add = False} : (memref<1x256x40x40xsi8, strides: [6400, 1600, 40, 1]>, memref<256x256x1x1xsi8>, ui8, si8, none) -> (memref<1x256x40x40xsi32, strides: [6400, 1600, 40, 1]>, none)
CHECK-NEXT:        %R3, %B383 = "arith.adds"(%R6.204, %R3, %D123) {round_mode = 0} : (memref<1x256x40x40xsi32, strides: [0, 1, 0, 0]>, memref<1x256x40x40xsi32, strides: [6400, 1600, 40, 1]>, none) -> (memref<1x256x40x40xsi32, strides: [6400, 1600, 40, 1]>, none)
CHECK:        %R1.9216, %B426 = "quant.rq1"(%R2, %R14.2304, %R14.2308, %R14.2312, %D138) {round_mode = 5} : (memref<1x255x40x40xsi32, strides: [6400, 1600, 40, 1]>, memref<1x255x1x1xsi32, strides: [64, 16, 1, 1]>, memref<1x255x1x1xsi32, strides: [64, 16, 1, 1]>, memref<1x255x1x1xsi32, strides: [64, 16, 1, 1]>, none) -> (memref<1x255x40x40xsi8, strides: [6400, 1600, 40, 1]>, none)
CHECK-NEXT:        %G11526144, %D139 = "dma.tensor"(%R5, %B423) {decompress = False} : (memref<1x255x80x80xi8, strides: [25600, 6400, 80, 1]>, none) -> (memref<1x255x80x80xi8, strides: [1632000, 6400, 80, 1]>, none)
CHECK-NEXT:        %R3, %B427 = "conv.normal"(%R4.6400, %R14.256, %C0, %C0, %D139) {kernel = [1, 1], stride = [1, 1], in_zero = [0, 0], ke_zero = [0, 0], kernel_rotate = False, pad_mode = 0, pad = [0, 0, 0, 0], res_add = False} : (memref<1x512x20x20xsi8, strides: [3584, 448, 20, 1]>, memref<255x512x1x1xsi8>, ui8, si8, none) -> (memref<1x255x20x20xsi32, strides: [1600, 400, 20, 1]>, none)
CHECK-NEXT:        %R3, %B428 = "arith.adds"(%R14.204, %R3, %D139) {round_mode = 0} : (memref<1x255x20x20xsi32, strides: [0, 1, 0, 0]>, memref<1x255x20x20xsi32, strides: [1600, 400, 20, 1]>, none) -> (memref<1x255x20x20xsi32, strides: [1600, 400, 20, 1]>, none)
CHECK-NEXT:        %R2, %B429 = "quant.rq1"(%R3, %R14, %R14.4, %R14.8, %D139) {round_mode = 5} : (memref<1x255x20x20xsi32, strides: [1600, 400, 20, 1]>, memref<1x255x1x1xsi32, strides: [64, 16, 1, 1]>, memref<1x255x1x1xsi32, strides: [64, 16, 1, 1]>, memref<1x255x1x1xsi32, strides: [64, 16, 1, 1]>, none) -> (memref<1x255x20x20xsi8, strides: [1792, 448, 20, 1]>, none)
CHECK-NEXT:        %G11116544, %D140 = "dma.tensor"(%R1.9216, %B426) {decompress = False} : (memref<1x255x40x40xi8, strides: [6400, 1600, 40, 1]>, none) -> (memref<1x255x40x40xi8, strides: [408000, 1600, 40, 1]>, none)
