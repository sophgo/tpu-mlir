#ifndef ATOMIC_POOLING_DEPTHWISE_H
#define ATOMIC_POOLING_DEPTHWISE_H

#include "checker_internel.h"

#ifdef __cplusplus
extern "C" {
#endif

void atomic_max_min_pooling_check(
    u32 input_addr,
    u32 pad_ins_addr, // if pad_ins_is_const, store pad_value
    u32 output_addr,
    u32 index_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int kh,
    int kw,
    int stride_h,
    int stride_w,
    int ins_h,
    int ins_w,
    int dh,
    int dw,
    int pad_h_t,
    int pad_h_b,
    int pad_w_l,
    int pad_w_r,
    int pad_ins_is_const,
    int ins_const_val,
    int input_sign,
    PREC input_prec,
    PREC out_index_prec,
    PAD_MODE pad_mode,
    int do_relu,
    int saturate,
    PD_OP pool_op);

void atomic_avg_pooling_check(
    u32 input_addr,
    u32 pad_ins_addr, // if pad_ins_is_const, store pad_value
    u32 rq_addr,
    u32 output_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int kh,
    int kw,
    int stride_h,
    int stride_w,
    int ins_h,
    int ins_w,
    int dh,
    int dw,
    int pad_h_t,
    int pad_h_b,
    int pad_w_l,
    int pad_w_r,
    int pad_ins_is_const,
    int kernel_const_val,
    int ins_const_val,
    int do_relu,
    int do_rq,
    int rq_is_const,
    int sym_range,
    float re_scale,
    PREC input_prec,
    PREC output_prec,
    FP8_TYPE input_fp8_prec,
    FP8_TYPE kernel_fp8_prec,
    FP8_TYPE output_fp8_prec,
    PAD_MODE pad_mode,
    ROUND_MODE round_mode);

void atomic_avg_pooling_fixed_check(
    u32 input_addr,
    u32 pad_ins_addr, // if pad_ins_is_const, store pad_value
    u32 output_addr,
    u32 rq_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int kh,
    int kw,
    int stride_h,
    int stride_w,
    int ins_h,
    int ins_w,
    int dh,
    int dw,
    int pad_h_t,
    int pad_h_b,
    int pad_w_l,
    int pad_w_r,
    int pad_ins_is_const,
    int kernel_const_val,
    int ins_const_val,
    int input_sign,
    int output_sign,
    int kernel_sign,
    int do_relu,
    int do_rq,
    int rq_is_const,
    int sym_range,
    int mul,
    s8  shift,
    s16 yzp,
    ROUND_MODE round_mode,
    PREC input_prec,
    PREC output_prec,
    PAD_MODE pad_mode);

void atomic_depthwise_check(
    u32 input_addr,
    u32 weight_addr, // if kernel_is_const, store weight value
    u32 bias_addr, // if bias_is_const, store bias value
    u32 pad_ins_addr, // if pad_ins_is_const, store pad_value
    u32 rq_addr,
    u32 output_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int kh,
    int kw,
    int stride_h,
    int stride_w,
    int ins_h,
    int ins_w,
    int dh,
    int dw,
    int pad_h_t,
    int pad_h_b,
    int pad_w_l,
    int pad_w_r,
    int kernel_is_const,
    int bias_is_const,
    int pad_ins_is_const,
    int ins_const_val,
    int kernel_rotate,
    int do_relu,
    int saturate,
    int do_rq,
    int rq_is_const,
    PREC in_prec,
    PREC out_prec,
    FP8_TYPE input_type,
    FP8_TYPE kernel_type,
    FP8_TYPE res_type,
    PAD_MODE pad_mode);

void atomic_depthwise_quant_check(
    u32 input_addr,
    u32 weight_addr, // if kernel_is_const, store weight value
    u32 bias_addr, // if bias_is_const, store bias value
    u32 pad_ins_addr, // if pad_ins_is_const, store pad_value
    u32 requant_addr,
    u32 output_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int kh,
    int kw,
    int stride_h,
    int stride_w,
    int ins_h,
    int ins_w,
    int dh,
    int dw,
    int pad_h_t,
    int pad_h_b,
    int pad_w_l,
    int pad_w_r,
    int kernel_is_const,
    int bias_is_const,
    int pad_ins_is_const,
    int ins_const_val,
    int kernel_rotate,
    int input_sign,
    int weight_sign,
    int bias_sign,
    int output_sign,
    int do_relu,
    int sym_saturate,
    int do_requant,
    int requant_is_const,
    int shift_num, // s8
    int ozp, // s16
    ROUND_MODE rm_mode,
    PREC input_prec,
    PREC output_prec,
    PAD_MODE pad_mode);

void atomic_roi_max_min_pooling_check(
    u32 input_addr,
    u32 roi_addr, // roi pairs
    u32 output_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int output_w,
    int kh,
    int kw,
    int imm_const_val,
    int input_sign,
    PREC input_prec,
    int do_relu,
    PD_OP pool_op);

void atomic_roi_avg_pooling_check(
    u32 input_addr,
    u32 roi_addr, // roi pairs
    u32 output_addr,
    u32 rq_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int output_w,
    int kh,
    int kw,
    int kernel_const_val,
    int imm_const_val,
    int do_rq,
    int rq_is_const,
    float re_scale,
    int sym_range,
    int do_relu,
    FP8_TYPE input_fp8_type,
    FP8_TYPE kernel_fp8_type,
    FP8_TYPE res_fp8_type,
    PREC input_prec,
    PREC output_prec,
    ROUND_MODE round_mode);

void atomic_roi_avg_pooling_quant_check(
    u32 input_addr,
    u32 roi_addr, // roi pairs
    u32 output_addr,
    u32 rq_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int output_w,
    int kh,
    int kw,
    int kernel_const_val,
    int imm_const_val,
    int input_sign,
    int output_sign,
    int kernel_sign,
    PREC input_prec,
    PREC output_prec,
    int do_relu,
    int do_rq,
    int rq_is_const,
    int mul,
    s8 shift,
    s16 yzp,
    int sym_range,
    ROUND_MODE round_mode);

void atomic_roi_depthwise_check(
    u32 input_addr,
    u32 weight_addr, // if kernel_is_const store weight value
    u32 roi_addr, // roi pairs
    u32 rq_addr,
    u32 output_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int output_w,
    int kh,
    int kw,
    int imm_const_val,
    int kernel_is_const,
    int kernel_rotate,
    int do_relu,
    int do_requant,
    int rq_is_const,
    PREC in_prec,
    PREC out_prec,
    FP8_TYPE in_type,
    FP8_TYPE kernle_type,
    FP8_TYPE res_type);

void atomic_roi_depthwise_quant_check(
    u32 input_addr,
    u32 weight_addr, // if kernel_is_const store weight value
    u32 roi_addr, // roi pairs
    u32 requant_addr,
    u32 output_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int output_w,
    int kh,
    int kw,
    int imm_const_val,
    int kernel_is_const,
    int kernel_rotate,
    int input_sign,
    int kernel_sign,
    int res_sign,
    int do_relu,
    int sym_saturate,
    int do_requant,
    int requant_is_const,
    int shift_num, // s8
    int ozp, // s16
    ROUND_MODE rm_mode,
    PREC input_prec,
    PREC output_prec);

/********************** To be compatible with BM1684 **************************/
void atomic_avg_pooling_fix8b_check(
    u32 input_addr,
    u32 pad_ins_addr, // if pad_ins_is_const, store pad_value
    u32 output_addr,
    int input_n,
    int input_c,
    int input_h,
    int input_w,
    int kh,
    int kw,
    int stride_h,
    int stride_w,
    int ins_h,
    int ins_w,
    int dh,
    int dw,
    int pad_h_t,
    int pad_h_b,
    int pad_w_l,
    int pad_w_r,
    int pad_ins_is_const,
    int ins_const_val,
    int rshift_num,
    int input_sign,
    PREC input_prec,
    PREC output_prec,
    PAD_MODE pad_mode
    );

#ifdef __cplusplus
}
#endif
#endif  /* ATOMIC_POOLING_DEPTHWISE_H */
